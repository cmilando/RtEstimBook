[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Reproductive Number \\(R(t)\\)",
    "section": "",
    "text": "Overview\nSince the onset of the COVID-19 pandemic in early 2020, there has been a proliferation of software tools that make inference about the current state of an infectious disease outbreak.\nA widely used parameter in these tools is the effective reproductive number, \\(R(t)\\), defined in Gostic et al. (2020) as: “… the expected number of new infections caused by an infectious individual in a population where some individuals may no longer be susceptible.” \\(R(t)\\) has the following values and interpretations:\nImportantly, \\(R(t)\\) cannot be measured directly, it can only be estimated from observable variables (like reported case counts). It represents a combination of dynamic processes, including disease characteristics (e.g., infectiousness under various conditions, mode of transport) and extrinsic factors (e.g., lockdowns that reduce person-to-person contact).",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "Reproductive Number \\(R(t)\\)",
    "section": "",
    "text": "R(t)\nInterpretation at time t\nOutbreak is ...\n\n\n&lt; 1\nEach infected person infects on average less than one additional person\nshrinking\n\n\n= 1\nEach infected person infects on average about one additional person\nstable\n\n\n&gt; 1\nEach infected person infects on average more than one additional person\ngrowing\n\n\n\n\n\n\n\n\n\nThe purpose of this document\n\nEach software package that estimates \\(R(t)\\) makes different assumptions, which leads to variations in estimated \\(R(t)\\) even if the same input data are used.\nTherefore, the purpose of this document is provide guidance about which software packages to choose for different analytical goals: see our Decision Matrix.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "index.html#funding-authors-and-acknowledgements",
    "href": "index.html#funding-authors-and-acknowledgements",
    "title": "Reproductive Number \\(R(t)\\)",
    "section": "Funding, authors, and acknowledgements",
    "text": "Funding, authors, and acknowledgements\nThis work is supported by InsightNet grant #\nThe lead authors of this document are at Boston University in the School of Public Health:\n\nChad Milando, Laura White, and Christine Sangphet\n\nMany additional co-authors contributed to this document including:\n\nAnne Cori, Brennan Klein, Katelyn Gostic, Alessandra Urbinati, Guillaume St-Onge, George Vega Yon, Kaitlyn Johnson, …\n\n\n\n\n\nGostic KM, McGough L, Baskerville EB, Abbott S, Joshi K, Tedijanto C, et al. 2020. Practical considerations for measuring the effective reproductive number, Rt. PLOS Computational Biology 16:e1008409; doi:10.1371/journal.pcbi.1008409.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "decisiontree.html",
    "href": "decisiontree.html",
    "title": "Decision matrix",
    "section": "",
    "text": "You can use the decision tool below to help choose which R packages may be right for your application:\n\nLook first for the desired output that you want to produce\nThen see which set of required data you have. If you do not have the required data for a specific package, use a different one\nFinally, estimate \\(R(t)\\) using the packages that are appropriate for your use case\n\nSee below the table for the assessment framework used to decide which packages to recommend.\n\n\n\n\n\n\nStrong recommendation\n\n\n\nUse multiple packages in your analysis; an ensemble of approaches will be the best way to ensure a robust estimate of \\(R(t)\\) for your use case.\n\n\n\nDecision matrix for choosing R(t) estimation tool\n\n\n\n\n\n\n\nDesired output\nData required\nPackage options\n\n\nWhat will R(t) be next week\n\n\n\n\ni.e., forcasting or nowcasting applications\n☐ Daily reported case counts\n\n\n\n\n☐ Serial interval\n\n\n\n\n☐ Reporting delay distribution\nEpiNow2, Option2\n\n\n☐ Wastewater suriveillance data\n\n\n\n\n☐\nno plan yet\n\n\nWhat was R(t) in the past week\n☐ Daily reported case counts\n\n\n\n\n☐ Serial interval\n\n\n\n\n☐ Reporting delay distribution\nRtEstim, Option2\n\n\nWastewater\nno plan yet\n\n\nWhat was R(t) historically\n☐ Daily reported case counts\n\n\n\n\n☐ Serial interval\n\n\n\n\n☐ Reporting delay distribution\nEpiEstim, Option2\n\n\nWastewater\nno plan yet\n\n\n\n\n\n\nAssessment framework\nAn objective comparison of the performance of the methods in these packages would be highly complex, given the following challenges:\n\nSome of the most widely-used packages are not accompanied with a peer-reviewed manuscript that describes or evaluates the theory behind modeling choices.\nEach package contains a subset of the methods below for constraining \\(R(t)\\) in time, but with subtle variations in implementation that are often not well-documented.\nSome packages have not been recently updated, and even those that have are not maintained on CRAN, instead leaving updates on a development version on GitHub.\nPerformance may vary widely considering additional factors like ease of implementation and computational time.\nit also may be the case that some methods of temporal smoothing work better in some cases versus other (very low case counts, rapid changes)\n\nIndeed, many published validation efforts are often not “apples to apples”, i.e., comparing two models that are using different amounts of information in estimating R(t). For example, comparing a model that has used only data before time before t to estimate R(t) versus a model that uses the entire historical record to estimate R(t) at time t.\nInstead, we present some some subjective reflections on various aspects of utilizing each package. These were assessed by consensus among the various authors and co-authors:\n\nAssessment rubric\n\n\n\n\n\n\n\nCategory\nNotes\nScales\n\n\nUsage\n\n\n\n\nEase of installation\nSome description\n☐ Easy: description\n\n\n\n\n☐ Moderate: description\n\n\n\n\n☐ Challenging: description\n\n\nEase of use\nSome description\n☐ Easy: description\n\n\n\n\n☐ Moderate: description\n\n\n\n\n☐ Challenging: description\n\n\nEase of extractring output\nSome description\n☐ Easy: description\n\n\n\n\n☐ Moderate: description\n\n\n\n\n☐ Challenging: description\n\n\nRuntime length\nSome description\n☐ Easy: description\n\n\n\n\n☐ Moderate: description\n\n\n\n\n☐ Challenging: description\n\n\nFeatures\n\n\n\n\nAbility to nowcast/forcast\nSome description\n☐ Easy: description\n\n\n\n\n☐ Moderate: description\n\n\n\n\n☐ Challenging: description\n\n\nIncorporates delay distributions\nSome description\n☐ Easy: description\n\n\n\n\n☐ Moderate: description\n\n\n\n\n☐ Challenging: description\n\n\nEstimates expected cases and R(t)\nSome description\n☐ Easy: description\n\n\n\n\n☐ Moderate: description\n\n\n\n\n☐ Challenging: description\n\n\nCommunicates uncertainty\nSome description\n☐ Easy: description\n\n\n\n\n☐ Moderate: description\n\n\n\n\n☐ Challenging: description\n\n\nValidation\n\n\n\n\nPeer reviewed validation\nSome description\n☐ Easy: description\n\n\n\n\n☐ Moderate: description\n\n\n\n\n☐ Challenging: description\n\n\nClarity of documentation\nSome description\n☐ Easy: description\n\n\n\n\n☐ Moderate: description\n\n\n\n\n☐ Challenging: description\n\n\nIntrepetability of outputs\nSome description\n☐ Easy: description\n\n\n\n\n☐ Moderate: description\n\n\n\n\n☐ Challenging: description",
    "crumbs": [
      "Decision matrix"
    ]
  },
  {
    "objectID": "methods.html",
    "href": "methods.html",
    "title": "Estimating R(t)",
    "section": "",
    "text": "To aid with interpretation of package outputs, we summarize the currently used inputs, data, methods and assumptions in \\(R(t)\\) estimation across the following categories:\n ⎘: How the relationship between \\(R(t)\\) and infections is defined   ⎘: How \\(R(t)\\) is constrained using distributions for key variables  ⎘: How \\(R(t)\\) is constrained over time  ⎘: Additional data and distributions that are used to constrain \\(R(t)\\)  ⎘: Inference frameworks that are used to estimate \\(R(t)\\)\nWe also present:\n ⎘: An Rshiny application for simulation of case data and \\(R(t)\\)  ⎘: A list of open research questions\nWe limit the methods discussed here to those for estimating historical to present-day \\(R(t)\\) values using daily case count data, where a case can be flexibly defined as an individual with a reported positive test (either through healthcare-seeking behavior, routine surveillance, or a hospital admission).\nOther methods not discussed here include:\n\ninference of \\(R(t)\\) exclusively from alternative data sources (e.g., genetic data,2 behavioral data,3 or viral loads in waste-water4),\ncalculations from compartmental, agent-based models, or network.5–7\n\nWe also limit the discussion to packages in the statistical software R,8 which may exclude some packages in other software programs that combine many of the methodological considerations discussed below.9\nThe methods discussed below and references to specific R packages are current as of December 1, 2024. We attempt to harmonize the mathematical choices between each package using terminology from each.",
    "crumbs": [
      "Estimating R(t)"
    ]
  },
  {
    "objectID": "methods_introduction.html",
    "href": "methods_introduction.html",
    "title": "Relating infections to \\(R(t)\\)",
    "section": "",
    "text": "Overview\nThere are two primary classes methods of estimating R(t) from case count data that are used in most R software packages. The first class of methods assumes there is a formulaic relationship between infections and reproduction number, a relationship known as the renewal equation.10 These infections are then assumed to result in (some fraction of) the observed cases. A second class of methods involves empirically calculating a quantity that approximates the latent quantity represented by a reproduction number by fitting a curve to the case count time-series and finding the time-varying slope in log space (and then performing other transformations). Empirical calculations are discussed in detail below in our examination of ways in which R(t) is constrained over time.",
    "crumbs": [
      "Estimating R(t)",
      "Relating infections to $R(t)$"
    ]
  },
  {
    "objectID": "methods_introduction.html#renewal-equation-estimates-of-rt",
    "href": "methods_introduction.html#renewal-equation-estimates-of-rt",
    "title": "Relating infections to \\(R(t)\\)",
    "section": "Renewal equation estimates of R(t)",
    "text": "Renewal equation estimates of R(t)\nThe renewal equation relates R(t) and infections on day t, I(t), using a third parameter known as the generation interval. The generation interval, ω, is the time between infection in the infector and infection in the infectee, and assuming independence is the linear combination of incubation time, the time between infection and symptom onset in an individual, and transmission time, the time between symptom onset in the infector and infection of the infectee.11 A similar parameter to the generation interval is the serial interval, which is the time between symptom onset in the infector and symptom onset in the infectee. The serial interval and generation interval are interchangeable if the incubation time is independent from the transmission time, and some formulations of the renewal equation use generation interval. In this paper we use the generation interval ω described by a probability mass function with non-zero values from day 1 (assuming that disease incubation takes at least 1 day) to a maximum day s, i.e., the longest interval between symptom onset in infector and infectee. Taking care to note that R(t) is undefined on day 0 since there has been no transmission yet (and assuming the initial infections are I(0)), the formulation of the renewal equation is thus:\nI(t)=R(t) ∑_(i=max⁡(1, t-s+1))^t▒ω(i) I(t-i) (Eq.1)\nFor brevity, we write the inner sum of (Eq.1) as:\nΛ(t)=∑_(i=max⁡(1,   t-s+1))^t ω(i) I(t-i)           (Eq.2)  \nThe assumptions of this formulation, as per Green et. al. 2022,12 are that incident infections can be described deterministically within each window of t∈[t-s+1,t] and that the generation interval distribution does not change over the modeling time.\nA common reframing of the renewal equation is to equate R(t) with an exponential growth rate, r. Under specific conditions and within a small time window (t∈[t-s+1,t]), infections can be assumed to grow exponentially at a constant rate (r).12–14 Using Eq. 1 in the time window t∈[t- s+1,t] and assuming some initial infections k, R(t) for t∈[t- s+1,t] can be inferred from only r and ω:\nI(t)=ke^rt,t∈[t-s+1,t] (Eq.3)\nR(t)=[∑_(i=max⁡(1, t-s+1))^t▒〖ω(i) e^(-ri) 〗]^(-1) ,t∈[t- s+1,t] (Eq.4)\nAgain, we will omit the writing the bounds for time in remaining formulae. A single R(t) value, say R_0, can also be put in the form of an infection attack rate, z,15 or in the final size equation,16 to estimate the proportion of all individuals that were affected by a disease with this R_0:\nz=1-exp⁡(-R_0 z) (Eq.5)\nThe attack rate function and others are implemented in the package epigrowthfit.17 The major difference between calculating R(t) from a renewal equation or an exponential growth rate equation is whether I(t) is used. If for a given time window both r and ω can be estimated independently, then R(t) can be inferred without infection data. Otherwise, infection data are needed to estimate R(t).\nUsing the renewal equation (Eq. 1) and given that I(t) and ω are known, R(t) can be solved for algebraically starting with R(t=1) and iterating forwards in time. However, this will produce highly volatile estimates of R(t) that recover the incidence curve directly. This is undesirable for several reasons: real-world infectivity likely does not vary dramatically from day to day, and real-world infection data are rarely complete, especially in an emerging epidemic, meaning that a certain amount of uncertainty must be incorporated into any estimation framework. In addition, infection incidence, I(t), are the data of interest but it is impossible to observe, so many calculations instead may use the observed reported cases, C(t), which requires some additional processing to incorporate into calculations of R(t). Therefore, a variety of constraints on R(t) are added in the inferential process: using distributions on key variables, placing restrictions on how R(t) varies through time, and with additional data sources and delay distributions. These choices dictate which estimation framework is used, which can add additional constraints.",
    "crumbs": [
      "Estimating R(t)",
      "Relating infections to $R(t)$"
    ]
  },
  {
    "objectID": "methods_introduction.html#empirical-estimates-of-rt",
    "href": "methods_introduction.html#empirical-estimates-of-rt",
    "title": "Relating infections to \\(R(t)\\)",
    "section": "Empirical estimates of \\(R(t)\\)",
    "text": "Empirical estimates of \\(R(t)\\)\nIn contrast to models that assume that renewal equation defines the relationship between infections and R(t), smoothing or regression models calculate time-varying R(t) directly from slope of the log of the infections time-series. Using this method, the relationship between R(t) and infections is empirically defined, being only constrained by the smoothing parameters of curve fit to infections data.\nEPINOW2 also has a non-renewal equation-based approach https://epiforecasts.io/EpiNow2/articles/estimate_infections.html#non-mechanistic-infection-model\nZac’s Gam Rt: https://github.com/CDCgov/cfa-gam-rt A GAM model will estimate this using a hierarchical spline w different components and weights",
    "crumbs": [
      "Estimating R(t)",
      "Relating infections to $R(t)$"
    ]
  },
  {
    "objectID": "methods_distributions.html",
    "href": "methods_distributions.html",
    "title": "Distributions for key variables",
    "section": "",
    "text": "Distributions for key variables\nA primary component of constraining R(t) is how distributions are used to constrain key variables in R(t) estimation: for I(t), ω, and for R(t) itself.\nAssuming some prior distributions for R(t) and the generation interval permit an analytical solution for the posterior distribution of R(t), as in Cori et. al. (2013) and the R package EpiEstim.18\nThese simplifying assumptions greatly constrain the space of potential R(t) and thus calculation times are relatively fast. Other software packages, such as EpiNow2,19 do not assume any distributional structure for R(t) or ω; this increases model flexibility at the cost of computational runtime and resources.",
    "crumbs": [
      "Estimating R(t)",
      "Distributions for key variables"
    ]
  },
  {
    "objectID": "methods_distributions.html#distributions-used-to-define-new-offspring-from-cases",
    "href": "methods_distributions.html#distributions-used-to-define-new-offspring-from-cases",
    "title": "Distributions for key variables",
    "section": "Distributions used to define new offspring from cases",
    "text": "Distributions used to define new offspring from cases\nAnother primary component of constraining R(t) is how distributions are used to define the next generation of infections, or I(t) from I(t-1).\nThe renewal equation provides a mechanism for estimating the next batch of infectees that occur due to transmission from the current round of infectors, a branching process. For time = t-1 the I(t) calculated in the renewal equation provides the expected value for a draw from a discrete distribution, the value of which represents the next generation of infectees. The discrete distribution chosen is commonly a Poisson distribution (in which the mean and variance parameter λ(t)=I(t)). Thus, using this constraint, the time-series of I(t) represents draws from a series of Poisson distributions with means of λ(t). Alternatively, a Negative Binomial distribution can be used (with a mean parameter again equal to I(t)), although this requires additionally fitting the size parameter (roughly, the spread of the distribution) to account the infectee distribution being “over-dispersed”.20\nImportantly, if additional delay distributions are included in the process of estimating R(t), the parameter that distributions are being used to estimate for the next generation may change (e.g., from I(t) to D(t), the mean value for daily reported cases calculated after applying delay distributions to I(t)).",
    "crumbs": [
      "Estimating R(t)",
      "Distributions for key variables"
    ]
  },
  {
    "objectID": "methods_time.html",
    "href": "methods_time.html",
    "title": "Constraining \\(R(t)\\) over time",
    "section": "",
    "text": "Overview\nThe largest variety in constraints of R(t) exists in methods that impose structure on how R(t) varies with time. Each method confers various assumptions and implications for resulting estimates of R(t), and new methods represent a large area of innovation with regards to real-time infectious disease modeling. With these constraints, we can make inference from sampled case-count data as a signal of unobserved infections in the larger unobserved population.",
    "crumbs": [
      "Estimating R(t)",
      "Constraining $R(t)$ over time"
    ]
  },
  {
    "objectID": "methods_time.html#sec-fixedwindow",
    "href": "methods_time.html#sec-fixedwindow",
    "title": "Constraining \\(R(t)\\) over time",
    "section": "Fixed sliding windows",
    "text": "Fixed sliding windows\nA straightforward method of imposing structure on R(t) over time involves constraining R(t) to be drawn from the same distribution within moving time subsets, called sliding windows. We add the prefix of “fixed-size” to distinguish from methods that may adapt the size of the sliding window over time. &gt;&gt; make a destinction between deriving it and doing it by Bayesian.\nConsider the scenario where I(t) are drawn from a series of Poisson distributions and where R(t) are drawn from a series of Gamma distributions. Using a sliding window size, τ, of 5 days, R(t) on days 2 to 6 are assumed to be drawn from the Gamma distribution with parameters a_1 and b_1, R(t) days 3 to 7 are drawn from a Gamma distribution with parameters a_2 and b_2, and so on. In the above scenario, days 3 through 6 are in both windows and thus will be values that could be reasonably drawn from Gamma distributions with either a_1 and b_1 or a_2 and b_2. Using an assumption of Gamma distributions for the prior distribution of ω and R(t), Cori et. al. (2013)18 analytically derived a posterior distribution R(t) using fixed-size sliding windows, which has the following directly calculated (rather than inferred) mean and coefficient of variation of R(t):\nE[R(t)]=[a+ ∑_(i=max⁡(1, t-τ))^t▒I(i) ]/[1/b+∑_(i=max⁡(1, t-τ))^t▒Λ(i) ] (Eq.6) C.V.[R(t)]=[a+ ∑_(i=max⁡(1, t-τ))^t▒I(i) ]^(-1) (Eq.7)\nThus, sliding windows with larger τ improve the stability of the estimate of R(t) over smaller τ because the coefficient of variation of R(t) decreases as number of infections increases (see Web Appendix 1 of Cori et. al., 2013).18 Sliding windows are a key feature of EpiEstim.21 There are limitations of this derived sliding window approach, articulated well in Gostic et. al., (2020)1 and summarized here. There is no posterior distribution for the expected value of incidence In the fixed size sliding window approach, τ must be explicitly defined prior to inference. Shorter τ will lead to quicker response but more variable estimates of R(t), which increases the risk of over-fitting. At the extreme, if the τ is set to 1 day, the resulting R(t) will recover exactly the infection data. In addition, there is debate in the literature about where in time the estimate of R(t) for each window should go: Gostic et. al., (2020)1 recommends using the midpoint of each sliding window rather than time t. The choice of both τ and the location of the estimate of R(t) within each window results in gaps in predictions for R(t), barring other modifications: at the end of the modeling period to account for reporting delays or time between the midpoint of τ and the end of τ, and at the beginning of the time period to allow for enough cases to materialize. Web Appendix 4 of Cori. et. al (2013) gives the following recommendation for when to calculate R(t): “Overall, we suggest starting estimating once those three criteria are fulfilled: at least after , at least after one mean serial interval, and when at least 12 cases have been observed since the beginning of the epidemic.” The default recommendation for τ is one week (7 days);18 alternatively the package APEestim integrates with EpiEstim to propose a non-default choice of τ that minimizes one-step-ahead prediction errors.22",
    "crumbs": [
      "Estimating R(t)",
      "Constraining $R(t)$ over time"
    ]
  },
  {
    "objectID": "methods_time.html#sec-randomwalk",
    "href": "methods_time.html#sec-randomwalk",
    "title": "Constraining \\(R(t)\\) over time",
    "section": "Random walk",
    "text": "Random walk\nAnother method of constraining how R(t) evolves in time is to define the relationship between R(t), infections, and time in a random walk or auto-regressive framework. In this framework, there are latent or unobserved variables, e.g., R(t), that depend on observed variables, e.g., I(t) via the renewal equation, and the evolution of the unobserved variables through time can be parameterized. The auto-regressive component means that the current value of R(t) is correlated via some mechanism with R(t-1) (and potentially other past values). The packages epidemia23 and EpiNow2 contain an implementations of a random walk procedure that look generally as follows:\nf(R(t))=f(R(t-1))+N(0,σ_R) (Eq.8) σ_R ~ HalfNormal(ρ,φ) (Eq.9)\nThe random walk implies that adjacent R(t) values may be drawn from similar or even the same distribution, and would be correlated in time based on previous values. The variables ρ and φ are hyperparameters. The function f can be a transformation of R(t), e.g. in log space as in EpiNow2 to correct for the skewness of R(t), provide a variable that is more Gaussian, provide a variable that obeys the properties that we expect from R(t) (i.e., is non-negative), and aid in interpretability. The function f in epidemia contains more layers for pooled effects and group-level variables.",
    "crumbs": [
      "Estimating R(t)",
      "Constraining $R(t)$ over time"
    ]
  },
  {
    "objectID": "methods_time.html#sec-filtering",
    "href": "methods_time.html#sec-filtering",
    "title": "Constraining \\(R(t)\\) over time",
    "section": "Filtering",
    "text": "Filtering\nFiltering is another way that R(t) is constrained in common packages. Filtering means […]. One way that a filter could be implemented is in a Hidden Markov Model.24 A simple forward-looking linear filter for R(t) in an Hidden Markov Model might look as follows, with a tuning parameter (η) to influence the amount that R(t) can vary between time-steps and a standard white noise component (ϵ):\nR(t)=R(t-1)+(η√(R(t-1) ))ϵ(t-1) (Eq.10)\nThe package EpiFilter25 implements a two-stage filtering and smoothing method for estimating R(t). A key innovation of EpiFilter is that the states of historical R(t) are constrained to a predefined set of values; this dramatically reduces calculation time. The smoothing stage refines estimates of R(t) by incorporating future incidence, in this way using all available data in estimates of historical R(t). These modeling steps help avoid R(t) instability when infections are low and instability at the beginning and (more importantly) the end of the modeling period. Another way that filtering can be implemented is across the entire R(t) time-series.\nRtEstim:28 https://dajmcdon.github.io/rtestim/articles/delay-distributions.html\n\nWe propose a discrete spline-based approach, RtEstim, that solves a convex optimization problem—Poisson trend filtering—using the proximal Newton method. It produces a locally adaptive estimator for effective reproduction number estimation with heterogeneous smoothness.28\nEpiLPS:29\nIn EpiFilter, RtEstim, and EpiLPS, each R(t) estimated in this way thus contains information about past and pending infections, e.g., for R(t=i), the smoothing step will affect R(t=i) using information from 0&lt;i≤t_max. This complicates comparisons to outputs from other methods that only use historical information to estimate R(t), e.g., estimates for R(t=i) containing only information from t&lt;i.",
    "crumbs": [
      "Estimating R(t)",
      "Constraining $R(t)$ over time"
    ]
  },
  {
    "objectID": "methods_time.html#sec-gaussianprocess",
    "href": "methods_time.html#sec-gaussianprocess",
    "title": "Constraining \\(R(t)\\) over time",
    "section": "Gausian Process models",
    "text": "Gausian Process models\nGaussian Process models26 are a more flexible method of constraining the evolution of R(t) in time than the methods discussed thus far (in fact, a random-walk process can be thought of as a simplified case of Gaussian Process model). In Gaussian Process modeling, a family of basis functions are fit to available data, permitting inference about continuous processes without needing to a priori define where inflection points occur. The core of Gaussian Process operations is a kernel, which is used to assess the similarity between input vectors, say x and x^’. There are many options for potential kernels, and each contains different hyperparameters that are used to control the amount of smoothing that is enforced, as well as other factors. One such choice is the squared exponential kernel:\nk(x,x^’ )=α^2 exp⁡[-(x-x^’ )2/(2l2 )] (Eq.10)\nIn this kernel, the hyperparameters are the length scale, l, which controls the smoothness of the model, and the magnitude, α, which controls the range of values used in the fitting process. These parameters can be given prior distributions and fit using optimization. EpiNow2 uses contains options to use Gaussian Process models to control how R(t) in time. As one example, the relationship between first difference values of R(t) can be constrained using a zero-mean Gaussian Process model with the above kernel as the covariance function:\n    log⁡〖R(t)=log⁡R(t-1)+ GP(0,k(R(t),〖R(t〗^')))〗       (Eq.11)\n    \nThe advantage of Gaussian Process models is that R(t) is enforced to change smoothly in time using Eq.10. Limitations include complexity and computational time: Gaussian Process models have a computational complexity of O(n^3) for n observations.27 Although EpiNow2 in practice implements faster approximations of Gaussian Process models,27 in general Gaussian Process runtimes and required computational resources are considerable as compared to other methods.",
    "crumbs": [
      "Estimating R(t)",
      "Constraining $R(t)$ over time"
    ]
  },
  {
    "objectID": "methods_additionaldata.html",
    "href": "methods_additionaldata.html",
    "title": "Additional data",
    "section": "",
    "text": "Reconstruction of missing data\nEstimates of R(t) can also be improved using additional data. , you can beef up the calculation by including other pieces of information about counts.\nExtending EpiEstim • The package bayEStim30 also extends EpiEstim o Our method extends that of Cori et al (2013), adding Bayesian imputation of missing symptom onset dates, imputation of infection times using an external estimate of the incubation period, and an adjustment for reporting delay. • Tenglong’s work31 and the accompanying package WhiteLabRt32 use the sliding window approach to estimating missing reporting delay information from line-list data (originally implemented as a Gibbs sampler, later updater to STAN). • The package estimateR involves estimating missing count data using smoothing [confirm].33\n• Does EpiNow2 do this?\nEpidemia: 23 . We introduce a Bayesian mechanistic model linking the infection cycle to observed deaths, inferring the total population infected (attack rates) as well as Rt.",
    "crumbs": [
      "Estimating R(t)",
      "Additional data"
    ]
  },
  {
    "objectID": "methods_additionaldata.html#delay-distributions",
    "href": "methods_additionaldata.html#delay-distributions",
    "title": "Additional data",
    "section": "Delay distributions",
    "text": "Delay distributions\nImportantly, the definition of R(t) is linked to the data that are being used, so models that calculate a similar quantity as R(t) but instead from infections, symptom onset, or reports are important quantities but differ in definition from the instantaneous reproduction number R(t) as defined throughout the literature. sometimes R(t) is calculated directly from reported case data and then shifted backwards by a delay distribution, whereas other times R(t) is calculated from inferred dates of infection using reported case data.\nReporting delay, Onset delays etc Delay PMFs that you can pass in series which have cascading impacts.\nEpiNow2 has this:\nOur estimates overcome some of the limitations of naive implementations that derive estimates for the reproduction number directly from numbers of reported cases without adjusting (or with only partial adjustments) for the delay from infection to symptom onset or from onset to notification. \nOur approach also incorporates multiple sources of uncertainty that if excluded can bias estimates.\n\nEpiFilter was also recently generalized to incorporate hetereogeonous transmission rates and reporting delays.34\nSeveral packages have been created to extend EpiEstim to use delay distributions: The package bayEStim30 also extends EpiEstim Our method extends that of Cori et al (2013), adding Bayesian imputation of missing symptom onset dates, imputation of infection times using an external estimate of the incubation period, and an adjustment for reporting delay. The package estimateR involves combining various delay distributions with EpiEstim.33 The package EpiInvert also has methods for including delay disributions with EpiEstim.35",
    "crumbs": [
      "Estimating R(t)",
      "Additional data"
    ]
  },
  {
    "objectID": "methods_additionaldata.html#clinical-data-distributions",
    "href": "methods_additionaldata.html#clinical-data-distributions",
    "title": "Additional data",
    "section": "Clinical data distributions",
    "text": "Clinical data distributions\nAgain, some packages just modify EpiEstim: • The ern36 package ultimately uses the EpiEstim package for the core of the computation as EpiEstim already provides a robust and one of the fastest implementations of well-tested estimation algorithms. However, ern wraps complex and critical features for estimating from real-world clinical and wastewater data that have not all been implemented in any one existing package for estimation Here, we present the library ern to address the gaps identified above, specifically: o to disaggregate the clinical reports into a shorter time unit to enable estimation of using an intrinsic generation interval on a useful timescale; o to provide a framework to estimate from wastewater data, consistent with an estimation based on clinical data; o to provide a user-friendly interface geared at public-health practitioners that may have limited proficiency in the programming language; o to perform an efficient and rapid estimation.",
    "crumbs": [
      "Estimating R(t)",
      "Additional data"
    ]
  },
  {
    "objectID": "methods_additionaldata.html#linear-predictor-model-components",
    "href": "methods_additionaldata.html#linear-predictor-model-components",
    "title": "Additional data",
    "section": "Linear predictor model components",
    "text": "Linear predictor model components\nViaEpidemia School closures etc\nEpiFusion:37 We propose a model of Rt that estimates outbreak trajectories conditional upon both phylodynamic (time-scaled trees estimated from genetic sequences) and epidemiological (case incidence) data.",
    "crumbs": [
      "Estimating R(t)",
      "Additional data"
    ]
  },
  {
    "objectID": "methods_inference.html",
    "href": "methods_inference.html",
    "title": "Inference frameworks",
    "section": "",
    "text": "Bayesian optimization\nFinally there are different ways of acutally calculating the numbers once you have the theory lined up.\n Assumes a distribution –&gt; solved analytically • EpiEstim o restricted set of GI options (gamma?) enables analytical solve for the posterior estimate of R(t) which is also a Gamma, using conjugate priors\n Doesn’t assume a distribution of R(t) or I(t) –&gt; Uses MCMC • EpiNow2, implemented in STAN • Hierarchical NUTS",
    "crumbs": [
      "Estimating R(t)",
      "Inference frameworks"
    ]
  },
  {
    "objectID": "methods_inference.html#maxliklihood-optimization",
    "href": "methods_inference.html#maxliklihood-optimization",
    "title": "Inference frameworks",
    "section": "MaxLiklihood optimization",
    "text": "MaxLiklihood optimization\n• Frequentist o RtEstim\nWallinga, J., and P. Teunis. “Different Epidemic Curves for Severe Acute Respiratory Syndrome Reveal Similar Impacts of Control Measures.” American Journal of Epidemiology 160,no. 6 (2004): 509. • ^ this has the likelihood calculation in it\nOne of the most widely used methods for estimating time-varying reproduction number is a maximum likelihood-based approach {White, 2008}. • White LF, Pagano M. A likelihood-based method for real-time estimation of the serial interval and reproductive number of an epidemic. Stat Med 2008; 27(16): 2999–3016.",
    "crumbs": [
      "Estimating R(t)",
      "Inference frameworks"
    ]
  },
  {
    "objectID": "simulation_tool.html",
    "href": "simulation_tool.html",
    "title": "Simulation tool",
    "section": "",
    "text": "The tool below walks through the steps of simulating estimates of the instantaneous reproduction number,which can be helpful for surveillance and intervention planning of infectious diseases. For this simulation, we take several steps to simulate how cases spread from one person to another: (1) Simulate the individual-level incubation time distribution, then (2) simulate the individual-level transmission time distribution (assumed to be independent from the incubation time distribution). We then can derive distributions for the generation time and serial interval using the relationships, simulate the individual-level administrative delay in reporting, and simulate the population-level infectivity dynamics.",
    "crumbs": [
      "Estimating R(t)",
      "Simulation tool"
    ]
  },
  {
    "objectID": "methods_research.html",
    "href": "methods_research.html",
    "title": "Open research questions",
    "section": "",
    "text": "Need to add a page of existing research questions\n\nsub-regional or pooling …\nother stuff, i think you had a list of this somehwere",
    "crumbs": [
      "Estimating R(t)",
      "Open research questions"
    ]
  },
  {
    "objectID": "packages.html",
    "href": "packages.html",
    "title": "Packages",
    "section": "",
    "text": "Table 1. R(t) estimation R packages with a peer-reviewed journal reference describing the underlying methods \n  \n  \n    APEestim\n    Epidemia\n    EpiEstim\n    EpiFilter\n    EpiFusion\n    epigrowthfit\n    EpiLPS\n    ern\n    EstimateR\n    R0\n    RtEstim\n    EpiInvert\n    WhiteLabRt\n  \n  \n\n\n\n   Table 2. R(t) estimation R packages without a peer-reviewed journal reference describing the underlying methods \n  \n  \n    bayEStim\n    earlyR\n    EpiNow2\n    epinowcast",
    "crumbs": [
      "Packages"
    ]
  },
  {
    "objectID": "package_APEstim.html",
    "href": "package_APEstim.html",
    "title": "APEstim",
    "section": "",
    "text": "| Parag and Donnelly (2020) | 🔗 | Feb 12, 2021 |\n\nBrief description\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code\n\n\n\n\nParag KV, Donnelly CA. 2020. Using information theory to optimise epidemic models for real-time prediction and estimation. PLoS Computational Biology 16:e1007990; doi:10.1371/journal.pcbi.1007990.",
    "crumbs": [
      "Packages",
      "APEstim"
    ]
  },
  {
    "objectID": "package_bayEStim.html",
    "href": "package_bayEStim.html",
    "title": "bayEStim",
    "section": "",
    "text": "Brief description\nbayEStim | Lytras T, Sypsa V, Demosthenes P, Tsiodr S | 🔗 | Aug 3, 2020 |\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code",
    "crumbs": [
      "Packages",
      "bayEStim"
    ]
  },
  {
    "objectID": "package_earlyR.html",
    "href": "package_earlyR.html",
    "title": "earlyR",
    "section": "",
    "text": "Brief description\nearlyR | Jombart T, Cori A, Nouvellet P, Skarp, J | 🔗 | Oct 27, 2020 |\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code",
    "crumbs": [
      "Packages",
      "earlyR"
    ]
  },
  {
    "objectID": "package_Epidemia.html",
    "href": "package_Epidemia.html",
    "title": "Epidemia",
    "section": "",
    "text": "| Flaxman et al. (2020) | 🔗 | Jun 23, 2021 |\n\nBrief description\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code\n\n\n\n\nFlaxman S, Mishra S, Gandy A, Unwin HJT, Mellan TA, Coupland H, et al. 2020. Estimating the effects of non-pharmaceutical interventions on COVID-19 in Europe. Nature 584:257–261; doi:10.1038/s41586-020-2405-7.",
    "crumbs": [
      "Packages",
      "Epidemia"
    ]
  },
  {
    "objectID": "package_EpiEstim.html",
    "href": "package_EpiEstim.html",
    "title": "EpiEstim",
    "section": "",
    "text": "EpiEstim | Cori et al. (2013), Nash et al. (2023) | 🔗 | Aug 30, 2024 |\n\nBrief description\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\nfixed sliding windows\n\n\n\nSample code\n\n\n\n\nCori A, Ferguson NM, Fraser C, Cauchemez S. 2013. A New Framework and Software to Estimate Time-Varying Reproduction Numbers During Epidemics. American Journal of Epidemiology 178:1505–1512; doi:10.1093/aje/kwt133.\n\n\nNash RK, Bhatt S, Cori A, Nouvellet P. 2023. Estimating the epidemic reproduction number from temporally aggregated incidence data: A statistical modelling approach and software tool. PLOS Computational Biology 19:e1011439; doi:10.1371/journal.pcbi.1011439.",
    "crumbs": [
      "Packages",
      "EpiEstim"
    ]
  },
  {
    "objectID": "package_EpiFilter.html",
    "href": "package_EpiFilter.html",
    "title": "EpiFilter",
    "section": "",
    "text": "Brief description\nEpiFilter | Parag (2021) | 🔗 | Dec 9, 2023 |\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code\n\n\n\n\nParag KV. 2021. Improved estimation of time-varying reproduction numbers at low case incidence and between epidemic waves. PLOS Computational Biology 17:e1009347; doi:10.1371/journal.pcbi.1009347.",
    "crumbs": [
      "Packages",
      "EpiFilter"
    ]
  },
  {
    "objectID": "package_EpiFusion.html",
    "href": "package_EpiFusion.html",
    "title": "EpiFusion",
    "section": "",
    "text": "Brief description\nEpiFusion | Judge et al. (2024) | 🔗 | Nov 30, 2024|\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code\n\n\n\n\nJudge C, Vaughan T, Russell T, Abbott S, Plessis L, Stadler T, et al. 2024. EpiFusion: Joint inference of the effective reproduction number by integrating phylodynamic and epidemiological modelling with particle filtering. PLOS Computational Biology 20:e1012528; doi:10.1371/journal.pcbi.1012528.",
    "crumbs": [
      "Packages",
      "EpiFusion"
    ]
  },
  {
    "objectID": "package_epigrowthfit.html",
    "href": "package_epigrowthfit.html",
    "title": "epigrowthfit",
    "section": "",
    "text": "Brief description\nepigrowthfit | Earn et al. (2020) | 🔗 | Aug 12, 2024|\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code\n\n\n\n\nEarn DJD, Ma J, Poinar H, Dushoff J, Bolker BM. 2020. Acceleration of plague outbreaks in the second pandemic. Proceedings of the National Academy of Sciences 117:27703–27711; doi:10.1073/pnas.2004904117.",
    "crumbs": [
      "Packages",
      "epigrowthfit"
    ]
  },
  {
    "objectID": "package_EpiInvert.html",
    "href": "package_EpiInvert.html",
    "title": "EpiInvert",
    "section": "",
    "text": "Brief description\nEpiInvert | Alvarez et al. (2021) | 🔗 | Dec 31, 2023|\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code\n\n\n\n\nAlvarez L, Colom M, Morel J-D, Morel J-M. 2021. Computing the daily reproduction number of COVID-19 by inverting the renewal equation using a variational technique. Proceedings of the National Academy of Sciences 118:e2105112118; doi:10.1073/pnas.2105112118.",
    "crumbs": [
      "Packages",
      "EpiInvert"
    ]
  },
  {
    "objectID": "package_EpiLPS.html",
    "href": "package_EpiLPS.html",
    "title": "EpiLPS",
    "section": "",
    "text": "Brief description\nEpiLPS | Gressani et al. (2022) | 🔗 | Oct 24, 2024|\n\n\nLink to cran\n\n\nMethods\nThis package contains the following methods:\n\nMethod 1\n\n\n\nStarter code\n\n\n\n\nGressani O, Wallinga J, Althaus CL, Hens N, Faes C. 2022. EpiLPS: A fast and flexible Bayesian tool for estimation of the time-varying reproduction number. PLOS Computational Biology 18:e1010618; doi:10.1371/journal.pcbi.1010618.",
    "crumbs": [
      "Packages",
      "EpiLPS"
    ]
  },
  {
    "objectID": "package_EpiNow2.html",
    "href": "package_EpiNow2.html",
    "title": "EpiNow2",
    "section": "",
    "text": "Description\n\nCopied from the developer site\n\nEpiNow2 estimates the time-varying reproduction number on cases by date of infection (using a similar approach to that implemented in EpiEstim). True infections, treated as latent and unobserved, are estimated and then mapped to observed data (for example cases by date of report) via one or more delay distributions (in the examples in the package documentation these are an incubation period and a reporting delay) and a reporting model that can include weekly periodicity.\nUncertainty is propagated from all inputs into the final parameter estimates, helping to mitigate spurious findings. This is handled internally. The time-varying reproduction estimates and the uncertain generation time also give time-varying estimates of the rate of growth.\nForecasting is also supported for the time-varying reproduction number, infections, and reported cases using the same generative process approach as used for estimation.\nImportant links:\n\n\n\n\n\n\n\n\n\nREF:  Wellcome report (Peer reviewed: ❌)\nDocs\nGithub (Updated: Mar 2025)\nCRAN (Updated: Feb 2025)\n\n\n\n\n\nMethods\nThis package contains the following methods:\n\nGaussian Process\n\n\n\nAssessment\n\n\n\n\n\n\n\n\nCategory\nAssessment\nRationale\n\n\nUsage\n\n\n\n\nEase of installation\n☐ Easy\n\n\n\n\n☑ Moderate\n\n\n\n\n☐ Challenging\nGiven rationale\n\n\nEase of use\n☐ Easy\n\n\n\n\n☑ Moderate\n\n\n\n\n☐ Challenging\nGiven rationale\n\n\nEase of extracting outputs\n☐ Easy\n\n\n\n\n☑ Moderate\n\n\n\n\n☐ Challenging\nGiven rationale\n\n\nRuntime length\n☐ Easy\n\n\n\n\n☑ Moderate\n\n\n\n\n☐ Challenging\nGiven rationale\n\n\nFeatures\n\n\n\n\nAbility to nowcast/forcast\n☐ Easy\n\n\n\n\n☑ Moderate\n\n\n\n\n☐ Challenging\nGiven rationale\n\n\nIncorporates delay distributions\n☐ Easy\n\n\n\n\n☑ Moderate\n\n\n\n\n☐ Challenging\nGiven rationale\n\n\nEstimates expected cases and R(t)\n☐ Easy\n\n\n\n\n☑ Moderate\n\n\n\n\n☐ Challenging\nGiven rationale\n\n\nCommunicates uncertainty\n☐ Easy\n\n\n\n\n☑ Moderate\n\n\n\n\n☐ Challenging\nGiven rationale\n\n\nValidation\n\n\n\n\nPeer reviewed validation\n☐ Easy\n\n\n\n\n☑ Moderate\n\n\n\n\n☐ Challenging\nGiven rationale\n\n\nClarity of documentation\n☐ Easy\n\n\n\n\n☑ Moderate\n\n\n\n\n☐ Challenging\nGiven rationale\n\n\nIntrepetability of outputs\n☐ Easy\n\n\n\n\n☑ Moderate\n\n\n\n\n☐ Challenging\nGiven rationale\n\n\n\n\n\nStarter code\n\ncopy in from SummRT\nall things should use the same datasets\ncould make these shiny apps if we wanted",
    "crumbs": [
      "Packages",
      "EpiNow2"
    ]
  },
  {
    "objectID": "package_epinowcast.html",
    "href": "package_epinowcast.html",
    "title": "epinowcast",
    "section": "",
    "text": "Brief description\nepinowcast | Abbott S, Lison A, Funk S, Pearson C, Gruson H, Guenther F, DeWitt M | 🔗| Sep 30, 2024 |\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code",
    "crumbs": [
      "Packages",
      "epinowcast"
    ]
  },
  {
    "objectID": "package_ern.html",
    "href": "package_ern.html",
    "title": "ern",
    "section": "",
    "text": "Brief description\nern | Champredon et al. (2024) | 🔗 | May 22, 2024|\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code\n\n\n\n\nChampredon D, Papst I, Yusuf W. 2024. Ern: An R package to estimate the effective reproduction number using clinical and wastewater surveillance data. PLOS ONE 19:e0305550; doi:10.1371/journal.pone.0305550.",
    "crumbs": [
      "Packages",
      "ern"
    ]
  },
  {
    "objectID": "package_EstimateR.html",
    "href": "package_EstimateR.html",
    "title": "EstimateR",
    "section": "",
    "text": "Brief description\nEstimateR | Scire et al. (2023) | 🔗 | Sep 10, 2024|\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code\n\n\n\n\nScire J, Huisman JS, Grosu A, Angst DC, Lison A, Li J, et al. 2023. estimateR: An R package to estimate and monitor the effective reproductive number. BMC Bioinformatics 24:310; doi:10.1186/s12859-023-05428-4.",
    "crumbs": [
      "Packages",
      "EstimateR"
    ]
  },
  {
    "objectID": "package_R0.html",
    "href": "package_R0.html",
    "title": "R0",
    "section": "",
    "text": "Brief description\nR0 | Obadia et al. (2012) | 🔗 | Sep 20, 2023|\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code\n\n\n\n\nObadia T, Haneef R, Boëlle P-Y. 2012. The R0 package: A toolbox to estimate reproduction numbers for epidemic outbreaks. BMC medical informatics and decision making 12: 1–9.",
    "crumbs": [
      "Packages",
      "R0"
    ]
  },
  {
    "objectID": "package_RtEstim.html",
    "href": "package_RtEstim.html",
    "title": "RtEstim",
    "section": "",
    "text": "Brief description\nRtEstim | Liu et al. (2024) | 🔗 | Sep 25, 2024|\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code\n\n\n\n\nLiu J, Cai Z, Gustafson P, McDonald DJ. 2024. Rtestim: Time-varying reproduction number estimation with trend filtering. PLOS Computational Biology 20:e1012324; doi:10.1371/journal.pcbi.1012324.",
    "crumbs": [
      "Packages",
      "RtEstim"
    ]
  },
  {
    "objectID": "package_WhiteLabRt.html",
    "href": "package_WhiteLabRt.html",
    "title": "WhiteLabRt",
    "section": "",
    "text": "Brief description\nWhiteLabRt | Li and White (2021) | 🔗 | Aug 16, 2024|\n\n\nAssessment table\n\n\nMethods\nThis package contains the following methods:\n\n\n\n\n\nSample code\n\n\n\n\nLi T, White LF. 2021. Bayesian back-calculation and nowcasting for line list data during the COVID-19 pandemic. PLOS Computational Biology 17:e1009210; doi:10.1371/journal.pcbi.1009210.",
    "crumbs": [
      "Packages",
      "WhiteLabRt"
    ]
  },
  {
    "objectID": "glossary.html",
    "href": "glossary.html",
    "title": "Glossary",
    "section": "",
    "text": "Effective reproduction number\nFrom Gostic et al. (2020):\n\nThe effective reproductive number, denoted as or \\(R_e\\) or \\(R_t\\), is the expected number of new infections caused by an infectious individual in a population where some individuals may no longer be susceptible\n\nAlso called the instantaneous reproductive number.\n\n\n\n\nGostic KM, McGough L, Baskerville EB, Abbott S, Joshi K, Tedijanto C, et al. 2020. Practical considerations for measuring the effective reproductive number, Rt. PLOS Computational Biology 16:e1008409; doi:10.1371/journal.pcbi.1008409.",
    "crumbs": [
      "Glossary"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Alvarez L, Colom M, Morel J-D, Morel J-M. 2021. Computing the daily\nreproduction number of COVID-19 by inverting the renewal\nequation using a variational technique. Proceedings of the National\nAcademy of Sciences 118:e2105112118; doi:10.1073/pnas.2105112118.\n\n\nChampredon D, Papst I, Yusuf W. 2024. Ern: An R package to\nestimate the effective reproduction number using clinical and wastewater\nsurveillance data. PLOS ONE 19:e0305550; doi:10.1371/journal.pone.0305550.\n\n\nCori A, Ferguson NM, Fraser C, Cauchemez S. 2013. A New\nFramework and Software to\nEstimate Time-Varying\nReproduction Numbers During\nEpidemics. American Journal of Epidemiology 178:1505–1512;\ndoi:10.1093/aje/kwt133.\n\n\nEarn DJD, Ma J, Poinar H, Dushoff J, Bolker BM. 2020. Acceleration of\nplague outbreaks in the second pandemic. Proceedings of the National\nAcademy of Sciences 117:27703–27711; doi:10.1073/pnas.2004904117.\n\n\nFlaxman S, Mishra S, Gandy A, Unwin HJT, Mellan TA, Coupland H, et al.\n2020. Estimating the effects of non-pharmaceutical interventions on\nCOVID-19 in Europe. Nature 584:257–261; doi:10.1038/s41586-020-2405-7.\n\n\nGostic KM, McGough L, Baskerville EB, Abbott S, Joshi K, Tedijanto C, et\nal. 2020. Practical considerations for measuring the effective\nreproductive number, Rt. PLOS Computational Biology\n16:e1008409; doi:10.1371/journal.pcbi.1008409.\n\n\nGressani O, Wallinga J, Althaus CL, Hens N, Faes C. 2022. EpiLPS: A fast\nand flexible Bayesian tool for estimation of the\ntime-varying reproduction number. PLOS Computational Biology\n18:e1010618; doi:10.1371/journal.pcbi.1010618.\n\n\nJudge C, Vaughan T, Russell T, Abbott S, Plessis L, Stadler T, et al.\n2024. EpiFusion: Joint inference of the effective reproduction number by\nintegrating phylodynamic and epidemiological modelling with particle\nfiltering. PLOS Computational Biology 20:e1012528; doi:10.1371/journal.pcbi.1012528.\n\n\nLi T, White LF. 2021. Bayesian back-calculation and nowcasting for line\nlist data during the COVID-19 pandemic. PLOS Computational\nBiology 17:e1009210; doi:10.1371/journal.pcbi.1009210.\n\n\nLiu J, Cai Z, Gustafson P, McDonald DJ. 2024. Rtestim: Time-varying\nreproduction number estimation with trend filtering. PLOS Computational\nBiology 20:e1012324; doi:10.1371/journal.pcbi.1012324.\n\n\nNash RK, Bhatt S, Cori A, Nouvellet P. 2023. Estimating the epidemic\nreproduction number from temporally aggregated incidence data: A\nstatistical modelling approach and software tool. PLOS Computational\nBiology 19:e1011439; doi:10.1371/journal.pcbi.1011439.\n\n\nObadia T, Haneef R, Boëlle P-Y. 2012. The R0 package: A toolbox to\nestimate reproduction numbers for epidemic outbreaks. BMC medical\ninformatics and decision making 12: 1–9.\n\n\nParag KV. 2021. Improved estimation of time-varying reproduction numbers\nat low case incidence and between epidemic waves. PLOS Computational\nBiology 17:e1009347; doi:10.1371/journal.pcbi.1009347.\n\n\nParag KV, Donnelly CA. 2020. Using information theory to optimise\nepidemic models for real-time prediction and estimation. PLoS\nComputational Biology 16:e1007990; doi:10.1371/journal.pcbi.1007990.\n\n\nScire J, Huisman JS, Grosu A, Angst DC, Lison A, Li J, et al. 2023.\nestimateR: An R package to estimate and monitor the\neffective reproductive number. BMC Bioinformatics 24:310; doi:10.1186/s12859-023-05428-4.",
    "crumbs": [
      "References"
    ]
  }
]