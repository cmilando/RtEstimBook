# Relating infections to $R(t)$ { .unnumbered}

#### Overview

There are two primary classes methods of estimating $R(t)$ from case count data that are used in most R software packages. 

(1) The first class of methods assumes there is a formulaic relationship between infections and reproduction number, a relationship known as the renewal equation [@Fraser2007Estimating].  These infections are then assumed to result in (some fraction of) the observed cases. 

(2) A second class of methods involves empirically calculating a quantity that approximates the latent quantity represented by a reproduction number by fitting a curve to the case count time-series and finding the time-varying slope in log space (and then performing other transformations). Empirical calculations are discussed in detail below in our examination of ways in which $R(t)$ is constrained over time.

## Renewal equation estimates of R(t)

The renewal equation relates $R(t)$ and infections on day $t$, $I(t)$, using a third parameter known as the <a class="definition" href="glossary.qmd#genInt">generation interval</a>. The generation interval, $ω$, is the time between infection in the infector and infection in the infectee. This is the sum of incubation time, the time between infection and symptom onset in an individual, and transmission time, the time between symptom onset in the infector and infection of the infectee [@Lehtinen2021On]. Assuming independence, the distribution of $ω$ is the linear combination of the distribution of these two quantities. In this document we use the generation interval $ω$ described by a probability mass function with non-zero values from day 1 (assuming that disease incubation takes at least 1 day) to a maximum day $s$, the longest interval between symptom onset in infector and infectee. 

Noting that $R(t)$ is undefined on day 0 since there has been no transmission yet (and writing the initial infections as $I(0)$), we sum over days to acquire the renewal equation:

$$
I(t) = R(t) \sum_{i = \max(1, t - s + 1)}^{t} \omega(i) \, I(t - i).
$$

For brevity, we write the inner sum of (Eq.1) as:

$$
Λ(t) =  \sum_{i = \max(1, t - s + 1)}^{t} \omega(i) \, I(t - i).
$$

The assumptions of this formulation, as per @Green2022Inferring, are that incident infections can be described deterministically within each window of $[t-s+1,t]$ and that the generation interval distribution does not change over the modeling time. 

### Serial interval

A similar parameter to the generation interval is the <a class="definition" href="glossary.qmd#serialInt">serial interval</a>, which is the time between symptom onset in the infector and symptom onset in the infectee. The serial interval and generation interval are interchangeable if the incubation time is independent from the transmission time, and some formulations of the renewal equation use serial interval. 

### Exponential growth rate

A common reframing of the renewal equation is to equate $R(t)$ with an exponential growth rate, $r$. Under specific conditions and within a small time window ($[t-s+1,t]$), infections in the early stage of an outbreak can be assumed to grow exponentially at a constant rate $r$ ([@Green2022Inferring, @Ma2020Estimating, @Wallinga2006How]). Using the time window $[t- s+1,t]$ and assuming some initial infections $k$, $R(t)$ for $[t- s+1,t]$ can be defined using $r$ and $ω$:

$$
I(t)=ke^rt
$$
$$
R(t)= [\sum_{i = \max(1, t - s + 1)}^{t} \omega(i) \, e^{-ri}]^{-1}	       
$$

Again, we will omit the writing the bounds for time in remaining formulae. A single $R(t)$ value, say $R_0$, can be substituted into an expression for the infection attack rate, $z$ (@Musa2020Estimation), or in the final size equation (@Ma2006Generality), to estimate the proportion of all individuals that were affected by a disease with this $R_0$:  

$$
z=1-exp⁡(-R_0  z)       			
$$

The attack rate function and others are implemented in the package [epigrowthfit](package_epigrowthfit.qmd). The major difference between calculating $R(t)$ from a renewal equation or an exponential growth rate equation is whether $I(t)$ is used. If for a given time window both $r$ and $ω$ can be estimated independently, then $R(t)$ can be inferred without infection data. Otherwise, infection data are needed to estimate $R(t)$. 

### Solving for $R(t)$
::: {.callout-warning}
## Solving for $R(t)$
Using the renewal equation and given that $I(t)$ and $ω$ are known, $R(t)$ can be solved for algebraically starting with R(t=1) and iterating forwards in time. However, this will produce highly volatile estimates of $R(t)$ that recover the incidence curve directly. 
:::

Solving directly for $R(t)$ at every timestep is undesirable for several reasons: 

- observed infections are the result of a noisy process with random day-to-day variations, which do not reflect an underlying change in infectivity;
- real-world infection data are rarely complete, especially in an emerging epidemic, meaning that a certain amount of uncertainty must be incorporated into any estimation framework;
- infection incidences, $I(t)$, are the data of interest but are cannot be observed directly, so many calculations instead use the observed reported cases, $C(t)$, which requires some additional processing to incorporate into calculations of $R(t)$. 

Therefore, a variety of constraints on $R(t)$ are added in the inferential process: using distributions on key variables, placing restrictions on how  $R(t)$ varies through time, and with additional data sources and delay distributions. These choices dictate which estimation framework is used, which can add additional constraints. 

## Empirical estimates of $R(t)$

In contrast to models that assume that the renewal equation defines the relationship between infections and $R(t)$, smoothing or regression models calculate time-varying $R(t)$ directly from the slope of the log of the infections time-series.  Using this method, the relationship between $R(t)$ and infections is empirically defined, being only constrained by the smoothing parameters of curve fit to infections data. Several R packages contain methods for this type of smoothing, e.g., [EpiLPS](package_EpiLPS.qmd), [EpiNow2](package_EpiNow2.qmd)

